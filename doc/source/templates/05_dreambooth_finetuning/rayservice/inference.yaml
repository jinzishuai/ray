apiVersion: ray.io/v1alpha1
kind: RayService
metadata:
  name: dreambooth-inference
  namespace: ray-gpu
spec:
  serveConfigV2: |
    applications:
      - name: stable_diffusion
        import_path: doc.source.templates.05_dreambooth_finetuning.rayservice:entrypoint
        runtime_env:
          working_dir: "https://github.com/jinzishuai/ray/archive/master.zip"
  serviceUnhealthySecondThreshold: 600
  deploymentUnhealthySecondThreshold: 600
  rayClusterConfig:
    rayVersion: "2.8.1"
    headGroupSpec:
      rayStartParams:
        dashboard-host: "0.0.0.0"
      template:
        spec:
          containers:
            - name: ray-head
              image: jinzishuai/ray-train-dreambooth:2.8.1-py310-gpu-arrow13
              resources:
                limits:
                  cpu: 2
                  memory: 13Gi
                  nvidia.com/gpu: 1
                requests:
                  cpu: 2
                  memory: 13Gi
                  nvidia.com/gpu: 1 # fits within a g5.xlarge instance in AWS
              ports:
                - containerPort: 6379
                  name: gcs-server
                - containerPort: 8265
                  name: dashboard
                - containerPort: 10001
                  name: client
                - containerPort: 8000
                  name: serve
              volumeMounts:
                - name: persistent-storage
                  mountPath: /data
          volumes:
            - name: persistent-storage
              persistentVolumeClaim:
                claimName: efs-claim
    # workerGroupSpecs:
    #   - replicas: 1
    #     minReplicas: 1
    #     maxReplicas: 5
    #     rayStartParams: {}
    #     groupName: small-group
    #     template:
    #       spec:
    #         containers:
    #           - name: ray-worker
    #             image: jinzishuai/ray-train-dreambooth:latest
    #             lifecycle:
    #               preStop:
    #                 exec:
    #                   command: ["/bin/sh", "-c", "ray stop"]
    #             resources:
    #               limits:
    #                 cpu: "2"
    #                 memory: "16Gi"
    #                 nvidia.com/gpu: 1
    #               requests:
    #                 cpu: "2"
    #                 memory: "16Gi"
    #                 nvidia.com/gpu: 1
# ---
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: ray-training
#   namespace: ray-training
#   annotations:
#     nginx.ingress.kubernetes.io/rewrite-target: "/$1"
# spec:
#   ingressClassName: nginx
#   rules:
#     - http:
#         paths:
#           # Ray Dashboard
#           - path: /ray-training/(.*)
#             pathType: ImplementationSpecific
#             backend:
#               service:
#                 name: ray-training-head-svc
#                 port:
#                   number: 8265
